"use strict";(self.webpackChunkexample_app=self.webpackChunkexample_app||[]).push([[4299],{4299:(b,l,n)=>{n.d(l,{N:()=>v});var o=n(7643),r=n(6354),h=n(8141),c=n(1360),u=n(7673);let g=(()=>{class p{cache=new Map;DEFAULT_TTL=3e5;constructor(){setInterval(()=>this.cleanExpiredEntries(),6e4)}get(e){const t=this.cache.get(e);return t?Date.now()-t.timestamp>t.ttl?(this.cache.delete(e),null):t.data:null}set(e,t,s=this.DEFAULT_TTL){this.cache.set(e,{data:t,timestamp:Date.now(),ttl:s})}has(e){return null!==this.get(e)}delete(e){return this.cache.delete(e)}clear(){this.cache.clear()}getStats(){return{size:this.cache.size,keys:Array.from(this.cache.keys()),ttl:this.DEFAULT_TTL/1e3/60}}cleanExpiredEntries(){const e=Date.now();for(const[t,s]of this.cache.entries())e-s.timestamp>s.ttl&&this.cache.delete(t)}getCachedObservable(e,t,s=this.DEFAULT_TTL){const a=this.get(e);return null!==a?(0,u.of)(a):t.pipe((0,h.M)(i=>this.set(e,i,s)))}static \u0275fac=function(t){return new(t||p)};static \u0275prov=c.jDH({token:p,factory:p.\u0275fac,providedIn:"root"})}return p})(),v=(()=>{class p{http;cacheService;baseUrl="https://api.thienhang.com";constructor(e,t){this.http=e,this.cacheService=t}getUsers(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/users/users`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getUser(e){return this.http.get(`${this.baseUrl}/governance/users/user/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}createUser(e){return this.http.post(`${this.baseUrl}/governance/users/user`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateUser(e,t){return this.http.patch(`${this.baseUrl}/governance/users/user/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteUser(e){return this.http.delete(`${this.baseUrl}/governance/users/user/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}activateUser(e){return this.http.post(`${this.baseUrl}/governance/users/user/${e}/activate`,{}).pipe((0,r.T)(t=>this.wrapResponse(t)))}deactivateUser(e){return this.http.post(`${this.baseUrl}/governance/users/user/${e}/deactivate`,{}).pipe((0,r.T)(t=>this.wrapResponse(t)))}assignUserToTeam(e,t){return this.http.post(`${this.baseUrl}/governance/users/user/${e}/team/${t}`,{}).pipe((0,r.T)(s=>this.wrapResponse(s)))}removeUserFromTeam(e,t){return this.http.delete(`${this.baseUrl}/governance/users/user/${e}/team/${t}`).pipe((0,r.T)(s=>this.wrapResponse(s)))}getUserTeams(e){return this.http.get(`${this.baseUrl}/governance/users/user/${e}/teams`).pipe((0,r.T)(t=>this.wrapArrayResponse(t)))}getTeams(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/teams/teams`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getTeam(e){return this.http.get(`${this.baseUrl}/governance/teams/team/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}createTeam(e){return this.http.post(`${this.baseUrl}/governance/teams/team`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateTeam(e,t){return this.http.patch(`${this.baseUrl}/governance/teams/team/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteTeam(e){return this.http.delete(`${this.baseUrl}/governance/teams/team/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}activateTeam(e){return this.http.post(`${this.baseUrl}/governance/teams/team/${e}/activate`,{}).pipe((0,r.T)(t=>this.wrapResponse(t)))}deactivateTeam(e){return this.http.post(`${this.baseUrl}/governance/teams/team/${e}/deactivate`,{}).pipe((0,r.T)(t=>this.wrapResponse(t)))}getTeamMembers(e){return this.http.get(`${this.baseUrl}/governance/teams/team/${e}/members`).pipe((0,r.T)(t=>this.wrapArrayResponse(t)))}addTeamMember(e,t){return this.http.post(`${this.baseUrl}/governance/teams/team/${e}/member/${t}`,{}).pipe((0,r.T)(s=>this.wrapResponse(s)))}removeTeamMember(e,t){return this.http.delete(`${this.baseUrl}/governance/teams/team/${e}/member/${t}`).pipe((0,r.T)(s=>this.wrapResponse(s)))}getAccounts(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/accounts/accounts`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getAccount(e){return this.http.get(`${this.baseUrl}/governance/accounts/account/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateAccount(e,t){return this.http.patch(`${this.baseUrl}/governance/accounts/account/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}getAssets(e){const t=this.buildHttpParams(e),s=`assets_${JSON.stringify(e||{})}`,a=this.http.get(`${this.baseUrl}/governance/assets/assets`,{params:t}).pipe((0,r.T)(i=>i&&i.data?{data:i.data,total:i.total,message:i.message,success:!0}:this.wrapArrayResponse(i)));return this.cacheService.getCachedObservable(s,a,3e5)}getAsset(e){const t=`asset_${e}`,s=this.http.get(`${this.baseUrl}/governance/assets/asset/${e}`).pipe((0,r.T)(a=>this.wrapResponse(a)));return this.cacheService.getCachedObservable(t,s,3e5)}createAsset(e){return this.clearAssetsCache(),this.http.post(`${this.baseUrl}/governance/assets/asset`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateAsset(e,t){return this.clearAssetsCache(),this.cacheService.delete(`asset_${e}`),this.http.patch(`${this.baseUrl}/governance/assets/asset/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteAsset(e){return this.clearAssetsCache(),this.cacheService.delete(`asset_${e}`),this.http.delete(`${this.baseUrl}/governance/assets/asset/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}clearAssetsCache(){this.cacheService.getStats().keys.filter(s=>s.startsWith("assets_")).forEach(s=>this.cacheService.delete(s))}clearCache(){this.cacheService.clear()}getPolicies(e){const t=`policies_${JSON.stringify(e||{})}`,s=this.buildHttpParams(e),a=this.http.get(`${this.baseUrl}/governance/policies/`,{params:s}).pipe((0,r.T)(i=>this.wrapResponse(i)));return this.cacheService.getCachedObservable(t,a,3e5)}getPolicy(e){console.log("Fetching policy with ID:",e);const t=`policy_${e}`,s=this.http.get(`${this.baseUrl}/governance/policies/${e}`).pipe((0,h.M)(a=>console.log("Raw policy API response:",a)),(0,r.T)(a=>this.wrapResponse(a)),(0,h.M)(a=>console.log("Wrapped policy response:",a)));return this.cacheService.getCachedObservable(t,s,3e5)}createPolicy(e){return this.http.post(`${this.baseUrl}/governance/policies`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updatePolicy(e,t){return this.http.patch(`${this.baseUrl}/governance/policies/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deletePolicy(e){return this.http.delete(`${this.baseUrl}/governance/policies/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}enablePolicy(e){return this.http.patch(`${this.baseUrl}/governance/policies/${e}`,{enabled:!0}).pipe((0,r.T)(t=>this.wrapResponse(t)))}disablePolicy(e){return this.http.patch(`${this.baseUrl}/governance/policies/${e}`,{enabled:!1}).pipe((0,r.T)(t=>this.wrapResponse(t)))}assignRoleToPolicy(e,t){return this.http.post(`${this.baseUrl}/governance/policies/${e}/roles/${t}`,{}).pipe((0,r.T)(s=>this.wrapResponse(s)))}removeRoleFromPolicy(e,t){return this.http.delete(`${this.baseUrl}/governance/policies/${e}/roles/${t}`).pipe((0,r.T)(s=>this.wrapResponse(s)))}getRoles(e){const t=`roles_${JSON.stringify(e||{})}`,s=this.buildHttpParams(e),a=this.http.get(`${this.baseUrl}/governance/roles/roles/`,{params:s}).pipe((0,r.T)(i=>this.wrapResponse(i)));return this.cacheService.getCachedObservable(t,a,3e5)}getRoleDetail(e){console.log("Fetching role detail with ID:",e);const t=`role_detail_${e}`,s=this.http.get(`${this.baseUrl}/governance/roles/roles/${e}`).pipe((0,h.M)(a=>console.log("Raw role detail API response:",a)),(0,r.T)(a=>this.wrapResponse(a)),(0,h.M)(a=>console.log("Wrapped role detail response:",a)));return this.cacheService.getCachedObservable(t,s,3e5)}createRole(e){return this.http.post(`${this.baseUrl}/governance/roles/role`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateRole(e,t){return this.http.patch(`${this.baseUrl}/governance/roles/role/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}updateRoleStatus(e,t){return this.http.patch(`${this.baseUrl}/governance/roles/role/${e}/status`,{is_active:t}).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteRole(e){return this.http.delete(`${this.baseUrl}/governance/roles/role/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}getPermissions(e){const t=`permissions_${JSON.stringify(e||{})}`,s=this.buildHttpParams(e),a=this.http.get(`${this.baseUrl}/governance/permissions/permissions`,{params:s}).pipe((0,r.T)(i=>this.wrapArrayResponse(i)));return this.cacheService.getCachedObservable(t,a,3e5)}getPermission(e){const t=`permission_${e}`,s=this.http.get(`${this.baseUrl}/governance/permissions/permission/${e}`).pipe((0,r.T)(a=>this.wrapResponse(a)));return this.cacheService.getCachedObservable(t,s,3e5)}createPermission(e){return this.cacheService.clear(),this.http.post(`${this.baseUrl}/governance/permissions/permission`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updatePermission(e,t){return this.cacheService.clear(),this.http.patch(`${this.baseUrl}/governance/permissions/permission/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deletePermission(e){return this.cacheService.clear(),this.http.delete(`${this.baseUrl}/governance/permissions/permission/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}bulkCreatePermissions(e){return this.cacheService.clear(),this.http.post(`${this.baseUrl}/governance/permissions/permissions/bulk`,{permissions:e}).pipe((0,r.T)(t=>this.wrapArrayResponse(t)))}bulkUpdatePermissions(e){return this.cacheService.clear(),this.http.patch(`${this.baseUrl}/governance/permissions/permissions/bulk`,{updates:e}).pipe((0,r.T)(t=>this.wrapArrayResponse(t)))}bulkDeletePermissions(e){return this.cacheService.clear(),this.http.delete(`${this.baseUrl}/governance/permissions/permissions/bulk`,{body:{ids:e}}).pipe((0,r.T)(t=>this.wrapResponse(t)))}assignPermissionToRole(e,t){return this.cacheService.clear(),this.http.post(`${this.baseUrl}/governance/permissions/assign`,{permissionId:e,roleId:t}).pipe((0,r.T)(s=>this.wrapResponse(s)))}revokePermissionFromRole(e,t){return this.cacheService.clear(),this.http.delete(`${this.baseUrl}/governance/permissions/revoke`,{body:{permissionId:e,roleId:t}}).pipe((0,r.T)(s=>this.wrapResponse(s)))}validatePermission(e,t){const a=this.buildHttpParams(t?{code:e,assetId:t}:{code:e});return this.http.get(`${this.baseUrl}/governance/permissions/validate`,{params:a}).pipe((0,r.T)(i=>this.wrapResponse(i)))}getPermissionsByRole(e){const t=`permissions_role_${e}`,s=this.http.get(`${this.baseUrl}/governance/permissions/role/${e}`).pipe((0,r.T)(a=>this.wrapArrayResponse(a)));return this.cacheService.getCachedObservable(t,s,3e5)}getPermissionsByUser(e){const t=`permissions_user_${e}`,s=this.http.get(`${this.baseUrl}/governance/permissions/user/${e}`).pipe((0,r.T)(a=>this.wrapArrayResponse(a)));return this.cacheService.getCachedObservable(t,s,3e5)}getEffectivePermissions(e){const t=`effective_permissions_${e}`,s=this.http.get(`${this.baseUrl}/governance/permissions/effective/${e}`).pipe((0,r.T)(a=>this.wrapArrayResponse(a)));return this.cacheService.getCachedObservable(t,s,12e4)}getClassifications(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/classifications`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getClassification(e){return this.http.get(`${this.baseUrl}/governance/classification/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}createClassification(e){return this.http.post(`${this.baseUrl}/governance/classification`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateClassification(e,t){return this.http.put(`${this.baseUrl}/governance/classification/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteClassification(e){return this.http.delete(`${this.baseUrl}/governance/classification/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}getRetentionPolicies(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/retention-policies`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getRetentionPolicy(e){return this.http.get(`${this.baseUrl}/governance/retention-policy/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}createRetentionPolicy(e){return this.http.post(`${this.baseUrl}/governance/retention-policy`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateRetentionPolicy(e,t){return this.http.put(`${this.baseUrl}/governance/retention-policy/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteRetentionPolicy(e){return this.http.delete(`${this.baseUrl}/governance/retention-policy/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}getAccessControls(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/access-controls`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getAccessControl(e){return this.http.get(`${this.baseUrl}/governance/access-control/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}createAccessControl(e){return this.http.post(`${this.baseUrl}/governance/access-control`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateAccessControl(e,t){return this.http.put(`${this.baseUrl}/governance/access-control/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteAccessControl(e){return this.http.delete(`${this.baseUrl}/governance/access-control/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}getComplianceRecords(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/compliance-records`,{params:t}).pipe((0,r.T)(s=>this.wrapArrayResponse(s)))}getComplianceRecord(e){return this.http.get(`${this.baseUrl}/governance/compliance-record/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}createComplianceRecord(e){return this.http.post(`${this.baseUrl}/governance/compliance-record`,e).pipe((0,r.T)(t=>this.wrapResponse(t)))}updateComplianceRecord(e,t){return this.http.put(`${this.baseUrl}/governance/compliance-record/${e}`,t).pipe((0,r.T)(s=>this.wrapResponse(s)))}deleteComplianceRecord(e){return this.http.delete(`${this.baseUrl}/governance/compliance-record/${e}`).pipe((0,r.T)(t=>this.wrapResponse(t)))}getGovernanceOverview(){return this.http.get(`${this.baseUrl}/governance/overview`).pipe((0,r.T)(e=>this.wrapResponse(e)))}getGovernanceMetrics(e){const t=this.buildHttpParams(e);return this.http.get(`${this.baseUrl}/governance/metrics`,{params:t}).pipe((0,r.T)(s=>this.wrapResponse(s)))}exportGovernanceData(e){return this.http.get(`${this.baseUrl}/governance/export/${e}`,{responseType:"blob"})}importGovernanceData(e,t){const s=new FormData;return s.append("file",t),s.append("entityType",e),this.http.post(`${this.baseUrl}/governance/import`,s)}validateGovernanceConfiguration(){return this.http.get(`${this.baseUrl}/governance/validate`)}buildHttpParams(e){let t=new o.Nl;return e&&Object.keys(e).forEach(s=>{if(null!=e[s]){if("number"==typeof e[s]&&isNaN(e[s]))return;Array.isArray(e[s])?e[s].forEach(a=>{"number"==typeof a&&isNaN(a)||(t=t.append(s,a.toString()))}):t=t.set(s,e[s].toString())}}),t}wrapResponse(e){return{data:e,success:!0}}wrapArrayResponse(e){return e&&"object"==typeof e&&"data"in e?{data:e.data||[],total:e.total||(Array.isArray(e.data)?e.data.length:0),success:void 0===e.success||e.success,message:e.message}:Array.isArray(e)?{data:e,total:e.length,success:!0}:{data:[],total:0,success:!1,message:"Invalid response format"}}static \u0275fac=function(t){return new(t||p)(c.KVO(o.Qq),c.KVO(g))};static \u0275prov=c.jDH({token:p,factory:p.\u0275fac,providedIn:"root"})}return p})()}}]);